Shell部分转义字符：
\a		生成声音提示
\b		退格符
\e		ESC字符
\f		换页符
\n
\r		回车符
\t
\v		竖向制表符
\\
\'
\nnn	采用1,2或3位八进制数值表示等价ASCII字符
\xHH	—————十六进制
单引号中的所有元字符均作为普通字符常量处理。
/bin		包含系统，管理员和普通用户可以共享的各种通用程序，如cat,cp,mv,rm,ls,ps等常用的基本命令，bash等
/boot	包含系统引导程序，linux内核程序文件vmlinuz，磁盘内存映像文件initrd及grub引导程序和配置文件
		grub其中还有GRUB配置文件，以及3种不同类型的初始引导程序等
/dev		在linux系统中，任何设备均对应一个或多个特殊文件（设备文件），这个目录包含了系统支持的所有设备文件。console表示系统控制台，lp0表示打印机，ttyXX表示系统的串口设备，cdrom，dsp文件表示系统的音响设备，写到这个文件的任何数据，将会被重定向到音响设备。mem表示物理内存，kmem表示系统内核战胜的虚拟内存，sda表示连接到主控制器的第一个磁盘，sda1/sda2则分别表示第一个和第二个磁盘分区。
/etc		整个linux系统的中心，包含所有系统管理和维护方面的配置文件。还有其他大量的配置文件分别位于单独子目录中，通常应注意备件这个目录中的重要配置文件，以便需要时能够快速地恢复系统。
/home	用户主目录的根目录。
/lib		包含系统引导过程及运行系统命令所需要的内核模块和各种动态链接共享库文件（.so）内核模块（驱动程序）位于/lib/modules/kernel-version子目录中。
/lost+found	每个文件系统分区都存在一个此目录，用于存储fsck命令在检测与修复文件系统时删除的文件或目录。Linux系统要求正常的关机。异常停机，会导致文件系统损坏，重新启动，会使用fsck命令对文件系统进行检测与修复。检测文件系统期间，fsck会尝试修复任何受损的文件，部分被恢复的文件或无法恢复的数据块将会被放置在每个文件系统的lost+found目录中。如果这个目录中还有受损的数据文件，可以使用debugfs等工具，尝试自行恢复丢失的数据，如果是系统文件，也许需要重新安装相应的软件包。
/media	移动不住介质的安装点。
/mnt		文件系统的临时安装点。这是一个通用的安装点，可以临时安装任何文件系统或远程资源。如果愿意，也可以在此目录中创建若干 子目录，以便安装不同的设备，例如，使用/mnt/cdrom,/mnt/usd分别安装CD和U盘等。
/opt			应用程序等附加软件的安装目录。
/proc		进程文件系统proc的根目录。其中部分文件分别对应当前正在运行的进程，可用于访问当前进程的地址空间。这是一个非常特殊的虚拟文件系统，其中并不包含“实际的”文件，而是可用以引用 当前运行系统的系统信息。如CPU，内存，运行时间，软件配置，及硬件配置等信息。以数字命名的目录对应于一个实际的进程，而这个数字，则表示进程的ID。这些大小为0的文件，相当于一个指向内核数据空间的指针，可据以查询相应的进程信息。由于这个原因，可以把/proc文件系统看作系统内核的一个控制和信息中心。事实上，许多系统命令只是直接显示这个文件系统中的部分文件内容。
	net其中的文件分别表示各种网络协议的状态与统计信息
	sys有各种系统信息，也包含系统内核与TCP/IP网络等的可调参数。
/root		超级用户的家目录
/sbin		包含与系统引导，管理和维护及硬件配置等方面有关的命令或脚本文件，fdisk,init,ifconfig等。供root用。
/srv			用于存储本地系统提供的服务进程所用的数据文件（现为空目录）
/sys			系统各种设备配置信息的根目录，block子目录中含有磁盘及磁盘分区的配置信息，bus目录包含pci，usb等的配置信息和驱动程序。
/tmp		临时文件目录，存储系统运行过程中生成的临时文件，也可以供用户存储自己的临时文件。其中的许多文件对于当前正在运行的进程而言是非常重要的，删除这样的文件可能会导致系统瘫痪。因此，一般不要自己删除这个目录中的文件，除非确实有把握。在大多数系统，尤其是在UNIX系统中，伴随着系统的启动过程，清除此目录。
/usr			即可以作为一个单独的文件系统，也可以作为根目录下的一个子目录，其中存有系统提供的各种共享数据，如用户命令，库函数，头文件和文档等。
	bin用户经常使用 的各种命令
	games游戏和教育程序
	includeC语言的头文件
	lib各种共享的库函数
	sbin管理员的东东
	share共享目录，包含man,info,doc,locale,vim,zoneinfo等子目录。
	src存放Linux系统内核的源代码和文档等
/var		即可作为一个单独的文件系统，也可作为根目录下的一个子目录，用于不住各种可变长的数据文件，临时文件
	cacheAPT和samba等程序使用的工作目录，缓存程序使用的各种数据文件
	lib存储软件包特定的动态链接共享库，配置文件，数据文件和状态信息
	mail每个用户电子邮件的邮箱文件
文件：从理论上讲，文件是由一系列连续的字节流组成的，最后 以一个EOF字符结束。但从物理实现来讲，文件实际上是由存储介质上的一系列数据块组成的，而组成文件的数据块，并不一定是连接的。
原则上，文件名可由任何字符组成，但若包含一些打印字符，空白，及SHELL元字符，实际用着会特别麻烦。。。
单从文件名来看，Linux系统中大部分文件都无从知道其类型，没有对文件的命名强加任何约定，但习惯上，以.c作为C源程序文件名的后缀，.sh作为脚本文件名的后缀。按照惯例，可执行程序的文件名不加后缀。
od -c 文件名可用来显示二进制数据文件。
为了保证目录的完整性，操作系统不允许用户直接修改目录文件。用户在目录中创建文件，由操作系统把文件加到目录中。删除文件时，由操作系统从目录文件中删除相应的文件名。目录文件始终是由操作系统负责维护的。
特殊文件（设备文件）不包含任何数据，只是提供一种机制，在文件系统中建立一个物理设备与文件名之间的映射。当提交一个读写特殊文件的请求时，系统将会直接调用相应的设备驱动程序。而驱动程序则负责在控制进程与相关的物理设备之间传输数据。（块设备和字符设备）
4个特殊文件
/dev/null是一个无底油，写入这个文件，数据就会消失。。。读取等同读取/dev/zero文件
/dev/zero可以提供任意数量的数值0,当程序从这个文件中读取256个字节时，将会收到256个0.写入等同楼上。。。
/dev/mem提供计算机的物理内存接口。读取他的字节地址被解释为物理内存地址。
/dev/keme提供系统内核的虚拟内存接口。从头开始读这个，会读取系统内核从第一个字节开始的数据。
Linux系统也采用了实际用户ID和有效用户ID。通过设置有效用户ID，用户能够临时地以超级用户身份执行某些特权命令。如passwd修改密码期间，有有效ID暂时变为超级用户ID，因而可以访问shadow等文件，修改密码。退出passwd命令，用户的有效ID又恢复原状。访问权限字段中的第一个S表示已经设置了有效用户ID.u+s,g+s这样的x->s...root要先执行下，才能使上述设置发挥作用。用户执行相应命令时，其有效用户ID才能变为超级用户ID，仅执行过程。
创建命令：touch 文件名 ，> 文件名，echo "str">文件名，cat > 文件名 “moreSTR”CTRL+D，VIM等工具。
许多vim命令前面都可以加一个计数值 ，表明相应命令需要重复执行的次数。3dd表示删除文本行的动作需要执行3次，最终结果是删除3行数据。同样可以用以移动光标2Ctrl+F表示前滚两次。
.命令可以重复执行先前的文本编辑命令。如dd后，用.，就又执行了一次dd。
vim可以编辑多文件vim file1 file2，用:e filename或者:n filename转到指定文件，:n命令转到下一个文件。
set all将会输出VIM编辑器当前支持的所有选项及默认设置。
改变某个选项:set option，取消某选项设置，:set nooption，部分选项如下。
嗯。。。需要再看吧。。。
永久性的设定vim环境/etc/vim/vimrc文件或者userhome/.vimrc or .exrc文件中。
示例
set showmode
ab abc 中国农业银行
ab boc 中国银行
...
实际上，还可以在每个目录中创建一个自己的.vimrc文件，适应不同需要。仅当主目录的.exrc文件包含set exrc，其他目录中的.vimrc文件才能发挥作用。
Linux系统提供了丰富的系统命令和各种各样的实用程序，只要经过适当的组合，基本上都可以满足绝大部分应用需求，而不必重新编写新的程序。这是Shell脚本最大的功用所在。chmod a+rx *.sh
Shell编程吸取了UNIX/Linux系统把复杂任务分解成简单子任务的优良传统，可以把各种系统工具和实用程序灵活地组合在一起，完成特定的功能需求。这理一种非常好的解决问题的手段，避免了针对各种各样的用户需求，都 要重新开发一套复杂工具的烦恼。事实上，Linux系统已经提供了丰富的，功能强大的系统工具和实用程序，只要灵活地运用这些现成的工具，就可以满足我们的绝大部分需求。
运行方式：一，sh *.sh             二，加上RX权限，运行，这个好，推荐。可以读取标准输入这个。
exit[n]终止脚本同时向调用者返回一个数值为n的出口状态。n，0—255的。正常终止应返回0.错误返回1-255
启用root：为root用户设置密码。sudo passwd root即可。/etc/gdm/gdm.conf把AllowRoot=true即可。
再次封锁超级用户，使用sudo passwd -l root即可启用。

